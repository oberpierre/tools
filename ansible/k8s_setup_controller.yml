# Creating kubeadm cluster (see https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/)
- name: Initializing K8s cluster on controller
  hosts: controller

  tasks:
  - name: Creating .kube folder
    file:
      path: "{{ ansible_env.HOME }}/.kube"
      state: directory
      mode: "0755"

  # Creating a kubeadm init config file (see https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/#config-file)
  # Adapt the configuration below as needed
  - name: Creating kubeadm config file
    copy:
      dest: "{{ ansible_env.HOME }}/.kube/kubeadm-config.yml"
      content: |
        apiVersion: kubeadm.k8s.io/v1beta3
        kind: InitConfiguration
        nodeRegistration:
          criSocket: "unix:///var/run/containerd/containerd.sock"
        ---
        apiVersion: kubeadm.k8s.io/v1beta3
        kind: ClusterConfiguration
        networking:
          podSubnet: "10.244.0.0/16"
        ---
        apiVersion: kubelet.config.k8s.io/v1beta1
        kind: KubeletConfiguration
        cgroupDriver: systemd

  - name: Initializing cluster
    shell: kubeadm init --config {{ ansible_env.HOME }}/.kube/kubeadm-config.yml >> {{ ansible_env.HOME }}/.kube/kubeadm.log
    args:
      creates: /etc/kubernetes/admin.conf
    become: true

  - name: Copying admin.conf to .kube
    copy:
      remote_src: true
      src: /etc/kubernetes/admin.conf
      dest: "{{ ansible_env.HOME }}/.kube/config"
      owner: "{{ ansible_env.USER }}"
      group: "{{ ansible_env.USER }}"
    become: true

  - name: Check if network is running
    shell: kubectl get pods --all-namespaces | awk '$1 == "kube-flannel" && $3 == "1/1" && $4 == "Running"'
    register: dns_running

  - name: Installing pod network add-on
    shell: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml >> {{ ansible_env.HOME }}/.kube/network_setup.log
    when: dns_running.stdout == ""

