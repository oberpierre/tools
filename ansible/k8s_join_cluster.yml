---
# Joining K8s cluster (see https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-join/)
- name: Generating K8s token and join command
  hosts: init_controller # the specified node MUST be part of the cluster already, usually the node used to initialize the cluster with k8s_init_cluster.yml

  tasks:
    - name: Generate join token and store join command
      ansible.builtin.command: kubeadm token create --print-join-command
      register: join_cmd

    - name: Getting cluster nodes
      kubernetes.core.k8s_info:
        kind: Node
      register: k8s_nodes
      changed_when: false

- name: Making control planes join the cluster
  hosts: controller
  vars:
    node_name_with_default: "{{ node_name | default(inventory_hostname) }}"

  tasks:
    # Only join if the current controller is not part of the cluster already, as indicated by `kubectl get nodes`,
    # as init_controller MUST be part of the cluster already it's node name will be included in the list as well.
    - name: Join new controller nodes as control plane
      ansible.builtin.command: "{{ join_cmd.stdout }} --node-name {{ node_name_with_default }} --control-plane"
      when:
        - node_name_with_default not in (k8s_nodes.resources | map(attribute='metadata.name') | list)

- name: Making worker nodes join the cluster
  hosts: worker
  vars:
    node_name_with_default: "{{ node_name | default(inventory_hostname) }}"

  tasks:
    - name: Checking if node is also a control-plane
      ansible.builtin.set_fact:
        is_control_plane: inventory_hostname in groups['controller']

    - name: Checking if node has control-plane taint
      kubernetes.core.k8s_info:
        kind: Node
        name: "{{ node_name_with_default }}"
      register: node_info
      when: is_control_plane
      changed_when: false

    - name: Set fact for control-plane taint existence
      ansible.builtin.set_fact:
        has_control_plane_taint: "{{ node_info.resources[0].spec.taints | selectattr('key', 'equalto', 'node-role.kubernetes.io/control-plane') | list | length > 0 }}"
      when:
        - is_control_plane
        - node_info.resources is defined
        - node_info.resources | length > 0
        - node_info.resources[0].spec.taints is defined

    - name: Allowing pods to be run on control-plane if necessary
      ansible.builtin.command: kubectl taint node {{ node_name_with_default }} node-role.kubernetes.io/control-plane- --validate=ignore
      when:
        - is_control_plane
        - has_control_plane_taint | default(false)

    - name: Allowing control-plane to be targed by load-balancer
      ansible.builtin.command: kubectl label node {{ node_name_with_default }} node.kubernetes.io/exclude-from-external-load-balancers-
      register: label_removed
      changed_when: "'not found' not in label_removed.stdout"
      when: is_control_plane

    - name: Joining cluster
      ansible.builtin.command: "{{ join_cmd.stdout }} --node-name {{ node_name_with_default }}"
      when:
        # the not control plane check is necessary as this may be a newly joined controller added by the previous play,
        # therefore may not yet have been part of the `k8s_nodes` output
        - not is_control_plane
        - node_name_with_default not in (k8s_nodes.resources | map(attribute='metadata.name') | list)
      become: true
