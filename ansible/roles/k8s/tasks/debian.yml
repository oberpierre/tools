---
- name: Adding K8s apt-key
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
    mode: "0644"
    force: true
  become: true

- name: Adding K8s' apt repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /"
    state: present
  become: true

# Configuring prerequisites (see https://kubernetes.io/docs/setup/production-environment/container-runtimes/)
- name: Creating /etc/modules-load.d/k8s.conf
  ansible.builtin.copy:
    dest: /etc/modules-load.d/k8s.conf
    mode: "0600"
    content: |
      overlay
      br_netfilter
  become: true

- name: Loading br_netfilter module
  community.general.modprobe:
    name: br_netfilter
    persistent: present
  become: true

- name: Loading overlay modules
  community.general.modprobe:
    name: overlay
    persistent: present
  become: true

- name: Forwarding IPV4 and enabling iptables to see bridged traffic
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
    sysctl_file: /etc/sysctl.d/k8s.conf
    reload: true
  loop:
    - net.ipv4.ip_forward
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables
  become: true

- name: Generating default containerd configuration
  ansible.builtin.command: /usr/bin/containerd config default
  register: containerd_default_config
  changed_when: false
  become: true

- name: Applying default containerd configuration
  ansible.builtin.copy:
    content: "{{ containerd_default_config.stdout }}"
    dest: /etc/containerd/config.toml
    mode: "0644"
    backup: true
  become: true

- name: Setting SystemdCgroup to true
  ansible.builtin.replace:
    path: /etc/containerd/config.toml
    regexp: "^(\\s+)SystemdCgroup = false$"
    replace: "\\1SystemdCgroup = true"
  become: true

- name: Restarting containerd service
  ansible.builtin.service:
    name: containerd
    state: restarted
    enabled: true
  become: true

# See https://kubernetes.io/docs/reference/networking/ports-and-protocols/ common ports for controller and worker
- name: Allowing access to K8s port
  community.general.ufw:
    rule: allow
    port: "{{ item.port }}"
    comment: "{{ item.comment }}"
    proto: tcp
  with_items:
    - port: "10250"
      comment: "Kubelet API"
  become: true
