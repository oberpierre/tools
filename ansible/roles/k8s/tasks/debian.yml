- name: Adding K8s apt-key
  get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
    mode: "0644"
    force: true

- name: Adding K8s' apt repository
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
    state: present

# Configuring prerequisites (see https://kubernetes.io/docs/setup/production-environment/container-runtimes/)
- name: Creating /etc/modules-load.d/k8s.conf
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

- name: Loading br_netfilter module
  community.general.modprobe:
    name: br_netfilter
    persistent: present

- name: Loading overlay modules
  community.general.modprobe:
    name: overlay
    persistent: present

- name: Forwarding IPV4 and enabling iptables to see bridged traffic
  sysctl:
    name: "{{ item }}"
    value: "1"
    sysctl_file: /etc/sysctl.d/k8s.conf
    reload: false
  loop:
    - net.ipv4.ip_forward
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Reloading sysctl params
  shell: sysctl --system

- name: Adding default containerd configuration
  shell: /usr/bin/containerd config default > /etc/containerd/config.toml

- name: Setting SystemdCgroup to true
  replace:
    path: /etc/containerd/config.toml
    regexp: '^(\s+)SystemdCgroup = false$'
    replace: '\1SystemdCgroup = true'

- name: Enabling containerd service
  service:
    name: containerd
    state: restarted
    enabled: yes

